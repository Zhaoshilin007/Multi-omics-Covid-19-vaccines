
#Load packages
```{r}
library(ggplot2)
library(ComplexHeatmap)
library(colorRamp2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(openxlsx)
library(readxl)
library(ggrepel)
```
#Heatmap for BNT162b2
```{r}
res_bnt_M6_M0<-
  res_bnt_M6_M0 %>%
  merge(gsea_class_bnt_overall %>% dplyr::select(gene,Pathway_Group),by="gene") %>% distinct(gene,.keep_all = TRUE) %>%
  group_by(Pathway_Group) %>%
  arrange(desc(M6_M0_log2FoldChange))

pattern <- paste(res_bnt_M6_M0$gene, collapse="|")
pattern <- gsub("([A-Za-z0-9-]+)", "__\\1__", pattern)

library(ComplexHeatmap)
split_rows<-res_bnt_M6_M0 %>% pull(Pathway_Group)
df_row_annotation<-res_bnt_M6_M0
ha_row = rowAnnotation(Pathway =df_row_annotation$Pathway_Group ,
                       #annotation_name_side = "left", 
                       annotation_name_rot = 90,
                       col=list(Pathway = c("Cellular Progress" = "#608595",
                                            "Immunological Function"="#DFC286",
                                            "Neural Function"="#C07A92")))


gene_FC<-res_bnt_M6_M0 

fold_change_annotation_M6 <- rowAnnotation(`Log2FC (M6 vs. M0)` = anno_barplot(gene_FC$M6_M0_log2FoldChange, 
                                                                               border = TRUE, ylim=c(-5,5),
                                                                               gp = gpar(fill = "#eaead3"), 
                                                                               axis = TRUE,
                                                                               axis_param = list(at = seq(-5, 5, by = 2.5))),
                                           width = unit(4, "cm"))



gene_FC_M1<-
  res_bnt_M1_M0 %>% 
  filter(gene %in% gene_FC$gene)
order_FC_m1<-match(res_bnt_M6_M0$gene,gene_FC_M1$gene)
gene_FC_M1<-gene_FC_M1[order_FC_m1,]

fold_change_annotation_M1 <- rowAnnotation(`Log2FC (M1 vs. M0)` = anno_barplot(gene_FC_M1$log2FoldChange, 
                                                                               border = TRUE, ylim=c(-1.5,1.5),
                                                                               gp = gpar(fill = "#eaead3"), 
                                                                               axis = TRUE,
                                                                               axis_param = list(at = seq(-1.5, 1.5, by = 0.5))),
                                           width = unit(4, "cm"))


df_long <- df_heatmap_gene_pathways_BNT_M6 %>%
  pivot_longer(cols = -c(Timepoint, Subject), 
               names_to = "Gene", 
               values_to = "Expression") %>%
  mutate(Subject=as.factor(Subject),Gene=as.factor(Gene),Expression=as.numeric(Expression)) %>%
  group_by(Subject, Gene) %>%
  dplyr::summarise(log2FoldChange = log2(Expression[Timepoint == "6 month Post BNT162b2"] / Expression[Timepoint == "Pre BNT162b2"]),
                   .groups = 'drop') %>%
  mutate(Gene_new=gsub("__", "",str_extract(Gene, "__(.*?)__"))) %>%
  mutate(log2FoldChange=as.numeric(log2FoldChange)) 

df_long$Direction<-ifelse(df_long$log2FoldChange>0,"Increase","Descrease")
library(scales)
increase_proportion <- df_long %>%
  group_by(Gene_new) %>%
  summarise(Increase_Proportion = mean(Direction == "Increase", na.rm = TRUE)* 100) %>%
  ungroup()
order_pro<-match(gene_FC$gene,increase_proportion$Gene_new)
increase_proportion<-increase_proportion[order_pro,]

proportion_barplot <- rowAnnotation(
  `Proportion in the BNT162b2 group` = anno_barplot(as.numeric(increase_proportion$Increase_Proportion), 
                                                    border = TRUE, 
                                                    gp = gpar(fill = "#FF0000"), ylim=c(0,100),
                                                    annotation_name_side="column",
                                                    axis = TRUE,
                                                    axis_param = list(at = seq(0, 100, by = 25), 
                                                                      labels = paste0(seq(0, 100, by = 25), "%"))),
  width = unit(4, "cm"), annotation_name_rot = 0)


heat_matrix_BNT_pathway_gene<-df_z_scored
order_gene<-match(gene_FC$gene,names(heat_matrix_BNT_pathway_gene))
heat_matrix_BNT_pathway_gene<-heat_matrix_BNT_pathway_gene[,order_gene]

pdf("~/heatmap_longitudinal_DEGs.pdf",height=9,width=20)
Heatmap(t(heat_matrix_BNT_pathway_gene) %>% as.data.frame() %>% dplyr::select(matches("M6")) %>% as.matrix(),
        name = "gene expression level (z-scored)",
        #top_annotation = ha_column,
        left_annotation = ha_row,
        #column_split = split_cols,
        row_split = split_rows,
        row_title_rot = 0,
        cluster_columns = TRUE,
        clustering_distance_columns = "manhattan",
        show_column_dend = FALSE,
        cluster_rows = FALSE,
        row_names_side = "left", km = 1, color_space = "LAB",
        row_gap = unit(2, "mm"), border = TRUE,
        width = 2,row_names_gp = gpar(fontsize = 7),
        col = colorRamp2(c(-4,-2,1,3),
                         c("#4575B4","#86B4D5","#FFFDC1", "#F68157")),#"#1e0736",
        show_column_names = FALSE) + fold_change_annotation_M6+fold_change_annotation_M1+proportion_barplot

dev.off()
```
#Heatmap for CoronaVac gene
```{r}

split_rows<-res_SNV_M6_M0 %>% pull(Pathway_Group)
ha_row = rowAnnotation(Pathway =df_row_annotation$Pathway_Group ,
                       #annotation_name_side = "left", 
                       annotation_name_rot = 90,
                       col=list(Pathway = c("Cellular Progress" = "#608595",
                                            "Immunological Function"="#DFC286",
                                            "Neural Function"="#C07A92")))


gene_FC<-res_SNV_M6_M0


fold_change_annotation_M6 <- rowAnnotation(`Log2FC (M6 vs. M0)` = anno_barplot(gene_FC$M6_M0_log2FoldChange, 
                                                                               border = TRUE, ylim=c(0,1.5),
                                                                               gp = gpar(fill = "#eaead3"), 
                                                                               axis = TRUE,
                                                                               axis_param = list(at = seq(0, 1.5, by = 0.5))),
                                           width = unit(4, "cm"))





gene_FC_M1<- res_SNV_M1_M0 %>% filter(gene %in% gene_FC$gene)

order_FC_m1<-match(res_SNV_M6_M0$gene,gene_FC_M1$gene)
gene_FC_M1<-gene_FC_M1[order_FC_m1,]

fold_change_annotation_M1 <- rowAnnotation(`Log2FC (M1 vs. M0)` = anno_barplot(gene_FC_M1$log2FoldChange, 
                                                                               border = TRUE, ylim=c(0,1),
                                                                               gp = gpar(fill = "#eaead3"), 
                                                                               axis = TRUE,
                                                                               axis_param = list(at = seq(0, 1, by = 0.5))),
                                           width = unit(4, "cm"))


df_long <- df_heatmap_gene_pathways_SNV_M6 %>%
  pivot_longer(cols = -c(Timepoint, Subject), 
               names_to = "Gene", 
               values_to = "Expression") %>%
  mutate(Subject=as.factor(Subject),Gene=as.factor(Gene),Expression=as.numeric(Expression)) %>%
  group_by(Subject, Gene) %>%
  dplyr::summarise(log2FoldChange = log2(Expression[Timepoint == "6 month Post Coronavac"] / Expression[Timepoint == "Pre Coronavac"]),
                   .groups = 'drop') %>%
  mutate(Gene_new=gsub("__", "",str_extract(Gene, "__(.*?)__"))) %>%
  mutate(log2FoldChange=as.numeric(log2FoldChange)) 

df_long$Direction<-ifelse(df_long$log2FoldChange>0,"Increase","Descrease")
library(scales)
increase_proportion <- df_long %>%
  group_by(Gene_new) %>%
  summarise(Increase_Proportion = mean(Direction == "Increase", na.rm = TRUE)* 100) %>%
  ungroup()
order_pro<-match(gene_FC$gene,increase_proportion$Gene_new)
increase_proportion<-increase_proportion[order_pro,]

proportion_barplot <- rowAnnotation(
  `Proportion in CoronaVac group` = anno_barplot(as.numeric(increase_proportion$Increase_Proportion), 
                                                 border = TRUE, 
                                                 gp = gpar(fill = "#FF0000"), ylim=c(0,100),
                                                 annotation_name_side="column",
                                                 axis = TRUE,
                                                 axis_param = list(at = seq(0, 100, by = 25), 
                                                                   labels = paste0(seq(0, 100, by = 25), "%"))),
  width = unit(4, "cm"), annotation_name_rot = 0)


heat_matrix_SNV_pathway_gene<-df_z_scored
order_gene<-match(gene_FC$gene,names(heat_matrix_SNV_pathway_gene))
heat_matrix_SNV_pathway_gene<-heat_matrix_SNV_pathway_gene[,order_gene]

pdf("~/heatmap_longitudinal_DEGs_SNV.pdf",height=3,width=20)
Heatmap(t(heat_matrix_SNV_pathway_gene) %>% as.data.frame() %>% dplyr::select(matches("M6")) %>% as.matrix(),
        name = "gene expression level (z-scored)",
        #top_annotation = ha_column,
        left_annotation = ha_row,
        #column_split = split_cols,
        row_split = split_rows,
        row_title_rot = 0,
        cluster_columns = TRUE,
        clustering_distance_columns = "manhattan",
        show_column_dend = FALSE,
        cluster_rows = FALSE,
        row_names_side = "left", km = 1, color_space = "LAB",
        row_gap = unit(2, "mm"), border = TRUE,
        width = 2,row_names_gp = gpar(fontsize = 7),
        col = colorRamp2(c(-4,-2,1,3),
                         c("#4575B4","#86B4D5","#FFFDC1", "#F68157")),#"#1e0736",
        show_column_names = FALSE) + fold_change_annotation_M6+fold_change_annotation_M1+proportion_barplot
dev.off()
```

```
# Load the data
dt_w_meta <- read_xlsx("~/Library/CloudStorage/OneDrive-TheChineseUniversityofHongKong/Project/Multi-omics/Results/3_differential_results/Differential_analysis_paired/Metabolomics/LMM_S.xlsx")
dt_w_SNV_meta <- dt_w_meta %>%
  filter(p_adj.groupM1 < 0.05) %>%
  mutate(Persistent = case_when(p_adj.groupM6 < 0.05 ~ "Yes", TRUE ~ "No"))

dt_w_BNT_meta <- read_xlsx("~/Library/CloudStorage/OneDrive-TheChineseUniversityofHongKong/Project/Multi-omics/Results/3_differential_results/Differential_analysis_paired/Metabolomics/LMM_B.xlsx") %>%
  filter(p_adj.groupM1 < 0.05) %>%
  mutate(Persistent = case_when(p_adj.groupM6 < 0.05 ~ "Yes", TRUE ~ "No"))

dt_w_overall_meta <- dt_w_SNV_meta %>%
  mutate(vac_type = "CoronaVac") %>%
  bind_rows(dt_w_BNT_meta %>% mutate(vac_type = "BNT162b2")) %>%
  mutate(omics="Metabolomics") %>%
  dplyr::select(-Marker) %>%
  dplyr::rename(Marker=Metabolites)


dt_w_lipids <- read_xlsx("~/Library/CloudStorage/OneDrive-TheChineseUniversityofHongKong/Project/Multi-omics/Results/3_differential_results/Differential_analysis_paired/Lipidomics/LMM_S.xlsx")
dt_w_SNV_lipids <- dt_w_lipids %>%
  filter(p_adj.groupM1 < 0.05) %>%
  mutate(Persistent = case_when(p_adj.groupM6 < 0.05 ~ "Yes", TRUE ~ "No"))

dt_w_BNT_lipids <- read_xlsx("~/Library/CloudStorage/OneDrive-TheChineseUniversityofHongKong/Project/Multi-omics/Results/3_differential_results/Differential_analysis_paired/Lipidomics/LMM_B.xlsx") %>%
  filter(p_adj.groupM1 < 0.05) %>%
  mutate(Persistent = case_when(p_adj.groupM6 < 0.05 ~ "Yes", TRUE ~ "No"))

dt_w_overall_lipids <- dt_w_SNV_lipids %>%
  mutate(vac_type = "CoronaVac") %>%
  bind_rows(dt_w_BNT_lipids %>% mutate(vac_type = "BNT162b2"))%>%
  mutate(omics="Lipidomics") %>%
  dplyr::select(-Marker,-Class) %>%
  dplyr::rename(Marker=Marker_new)

dt_w_overall<- rbind(dt_w_overall_meta,dt_w_overall_lipids )
  
ggplot(dt_w_overall, aes(x = Value.groupM1, y = Value.groupM6, fill = Persistent)) +
  geom_point(size = 2.5,shape=21) + 
  scale_fill_manual(values = c("No" = "grey", "Yes" = "#1d9770")) + 
  facet_grid(omics~ vac_type, scales = "free", space = "free_x") + 
  theme_minimal() + 
  theme(
    axis.text = element_text(face = "bold"), 
    axis.text.x = element_text(angle = 30, hjust = 1, size = 10), 
    axis.ticks = element_line(colour = "black"), 
    axis.line = element_line(colour = "black"), 
    panel.border = element_blank(), 
    panel.grid = element_blank(), 
    strip.background = element_rect(fill = "grey90", colour = NA), 
    legend.justification = c(1, 1)
  ) +
  labs(x = "M0 Vs. M1", y = "M0 Vs. M6") +
  theme_shilin+
  # Add text labels with ggrepel
  geom_text_repel(
    data = dt_w_overall %>% filter(Persistent == "Yes"),  # Filter for Persistent == "Yes"
    aes(label = Marker),  # Text labels
    size = 4, 
    box.padding = 0.35, 
    point.padding = 0.5, 
    segment.color = "grey50", 
    max.overlaps = 500
  ) +
  # Add dashed lines at x = 0 and y = 0
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +  # Dashed horizontal line
  geom_vline(xintercept = 0, linetype = "dashed", color = "black")  
ggsave("~/Longitudinal_scatterplot_Lip_meta.pdf",width=12,height=10)
```
